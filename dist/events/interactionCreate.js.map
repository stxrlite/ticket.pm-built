{"version":3,"file":"interactionCreate.js","sourceRoot":"/","sources":["events/interactionCreate.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionRowBuilder, GuildChannel, GuildMember, Interaction, ModalBuilder, SelectMenuComponentOptionData, StringSelectMenuBuilder, TextInputBuilder, TextInputStyle } from \"discord.js\";\nimport { log } from \"../utils/logs\";\nimport {createTicket} from \"../utils/createTicket\";\nimport { close } from \"../utils/close\";\nimport { claim } from \"../utils/claim\";\nimport { closeAskReason } from \"../utils/close_askReason\";\nimport { deleteTicket } from \"../utils/delete\";\nimport {BaseEvent, ExtendedClient} from \"../structure\";\n\n/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n\nexport default class InteractionCreateEvent extends BaseEvent {\n\tconstructor(client: ExtendedClient) {\n\t\tsuper(client);\n\t}\n\n\tpublic async execute(interaction: Interaction): Promise<void>  {\n\t\tif (interaction.isChatInputCommand()) {\n\t\t\tconst command = this.client.commands.get(interaction.commandName);\n\t\t\tif (!command) return;\n\n\t\t\ttry {\n\t\t\t\tawait command.execute(interaction);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\tawait interaction.reply({\n\t\t\t\t\tcontent: \"There was an error while executing this command!\",\n\t\t\t\t\tephemeral: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (interaction.isButton()) {\n\t\t\tif (interaction.customId === \"openTicket\") {\n\t\t\t\tawait interaction.deferReply({ ephemeral: true }).catch((e) => console.log(e));\n\n\t\t\t\tconst tCount = this.client.config.ticketTypes.length;\n\t\t\t\tif(tCount === 0 || tCount > 25) {\n\t\t\t\t\tawait interaction.followUp({content: this.client.locales.getValue(\"invalidConfig\"), ephemeral: true});\n\t\t\t\t\tthrow new Error(\"ticketTypes either has nothing or exceeded 25 entries. Please check the config and restart the bot\");\n\t\t\t\t}\n\n\t\t\t\tfor (const role of this.client.config.rolesWhoCanNotCreateTickets) {\n\t\t\t\t\tif (role && (interaction.member as GuildMember | null)?.roles.cache.has(role)) {\n\t\t\t\t\t\tinteraction\n\t\t\t\t\t\t\t.editReply({\n\t\t\t\t\t\t\t\tcontent: \"You can't create a ticket because you are blacklisted\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((e) => console.log(e));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Max Ticket\n\t\t\t\tif (this.client.config.maxTicketOpened > 0) {\n\t\t\t\t\tconst ticketsOpened = (await this.client.prisma.$queryRaw<[{count: bigint}]>\n\t\t\t\t\t`SELECT COUNT(*) as count FROM tickets WHERE closedby IS NULL AND creator = ${interaction.user.id}`)[0].count;\n\n\t\t\t\t\t// If maxTicketOpened is 0, it means that there is no limit\n\t\t\t\t\tif (ticketsOpened >= this.client.config.maxTicketOpened) {\n\t\t\t\t\t\tinteraction\n\t\t\t\t\t\t\t.editReply({\n\t\t\t\t\t\t\t\tcontent: this.client.locales.getValue(\"ticketLimitReached\").replace(\"TICKETLIMIT\", this.client.config.maxTicketOpened.toString())\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((e) => console.log(e));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Make a select menus of all tickets types\n\t\t\t\tlet options: SelectMenuComponentOptionData[] = [];\n\n\t\t\t\tfor (const x of this.client.config.ticketTypes) {\n\t\t\t\t\t// x.cantAccess is an array of roles id\n\t\t\t\t\t// If the user has one of the roles, he can't access to this ticket type\n\n\t\t\t\t\tconst a: SelectMenuComponentOptionData = {\n\t\t\t\t\t\tlabel: x.name,\n\t\t\t\t\t\tvalue: x.codeName,\n\t\t\t\t\t};\n\t\t\t\t\tif (x.description) a.description = x.description;\n\t\t\t\t\tif (x.emoji) a.emoji = x.emoji;\n\t\t\t\t\toptions.push(a);\n\t\t\t\t}\n\n\t\t\t\tfor (const x of options) {\n\t\t\t\t\tconst option = this.client.config.ticketTypes.filter((y) => y.codeName === x.value)[0];\n\t\t\t\t\tif (option.cantAccess) {\n\t\t\t\t\t\tfor (const role of option.cantAccess) {\n\t\t\t\t\t\t\tif (role && (interaction.member as GuildMember | null)?.roles.cache.has(role)) {\n\t\t\t\t\t\t\t\toptions = options.filter((y) => y.value !== x.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options.length <= 0) {\n\t\t\t\t\tinteraction.editReply({\n\t\t\t\t\t\tcontent: this.client.locales.getValue(\"noTickets\")\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst row = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(\n\t\t\t\t\tnew StringSelectMenuBuilder()\n\t\t\t\t\t\t.setCustomId(\"selectTicketType\")\n\t\t\t\t\t\t.setPlaceholder(this.client.locales.getSubValue(\"other\", \"selectTicketTypePlaceholder\"))\n\t\t\t\t\t\t.setMaxValues(1)\n\t\t\t\t\t\t.addOptions(options)\n\t\t\t\t);\n\n\t\t\t\tinteraction\n\t\t\t\t\t.editReply({\n\t\t\t\t\t\tcomponents: [row],\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => console.log(e));\n\t\t\t}\n\n\t\t\tif (interaction.customId === \"claim\") {\n\t\t\t\tclaim(interaction, this.client);\n\t\t\t}\n\n\t\t\tif (interaction.customId === \"close\") {\n\t\t\t\tawait interaction.deferReply({ ephemeral: true }).catch((e) => console.log(e));\n\t\t\t\tclose(interaction, this.client, this.client.locales.getSubValue(\"other\", \"noReasonGiven\"));\n\t\t\t}\n\n\t\t\tif (interaction.customId === \"close_askReason\") {\n\t\t\t\tcloseAskReason(interaction, this.client);\n\t\t\t}\n\n\t\t\tif (interaction.customId === \"deleteTicket\") {\n\t\t\t\tdeleteTicket(interaction, this.client);\n\t\t\t}\n\t\t}\n\n\t\tif (interaction.isStringSelectMenu()) {\n\t\t\tif (interaction.customId === \"selectTicketType\") {\n\t\t\t\tif (this.client.config.maxTicketOpened > 0) {\n\t\t\t\t\tconst ticketsOpened = (await this.client.prisma.$queryRaw<[{count: bigint}]>\n\t\t\t\t\t`SELECT COUNT(*) as count FROM tickets WHERE closedby IS NULL AND creator = ${interaction.user.id}`)[0].count;\n\t\t\t\t\t// If maxTicketOpened is 0, it means that there is no limit\n\t\t\t\t\tif (ticketsOpened >= this.client.config.maxTicketOpened) {\n\t\t\t\t\t\tinteraction\n\t\t\t\t\t\t\t.reply({\n\t\t\t\t\t\t\t\tcontent: this.client.locales.getValue(\"ticketLimitReached\").replace(\"TICKETLIMIT\", this.client.config.maxTicketOpened.toString()),\n\t\t\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((e) => console.log(e));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst ticketType = this.client.config.ticketTypes.find((x) => x.codeName === interaction.values[0]);\n\t\t\t\tif (!ticketType) return console.error(`Ticket type ${interaction.values[0]} not found!`);\n\t\t\t\tif (ticketType.askQuestions) {\n\t\t\t\t\t// Sanity Check\n\t\t\t\t\tconst qCount = ticketType.questions.length;\n\t\t\t\t\tif(qCount === 0 || qCount > 5)\n\t\t\t\t\t\tthrow new Error(`${ticketType.codeName} has either no questions or exceeded 5 questions. Check your config and restart the bot`);\n\n\t\t\t\t\tconst modal = new ModalBuilder().setCustomId(\"askReason\").setTitle(this.client.locales.getSubValue(\"modals\", \"reasonTicketOpen\", \"title\"));\n\t\t\t\t\tfor (const question of ticketType.questions) {\n\t\t\t\t\t\tconst index = ticketType.questions.indexOf(question);\n\t\t\t\t\t\tconst input = new TextInputBuilder()\n\t\t\t\t\t\t\t.setCustomId(`input_${interaction.values[0]}_${index}`)\n\t\t\t\t\t\t\t.setLabel(question.label)\n\t\t\t\t\t\t\t.setStyle(question.style == \"SHORT\" ? TextInputStyle.Short : TextInputStyle.Paragraph)\n\t\t\t\t\t\t\t.setPlaceholder(question.placeholder)\n\t\t\t\t\t\t\t.setMaxLength(question.maxLength);\n\n\t\t\t\t\t\tconst firstActionRow = new ActionRowBuilder<TextInputBuilder>().addComponents(input);\n\t\t\t\t\t\tmodal.addComponents(firstActionRow);\n\t\t\t\t\t}\n\n\t\t\t\t\tawait interaction.showModal(modal).catch((e) => console.log(e));\n\t\t\t\t} else {\n\t\t\t\t\tcreateTicket(interaction, this.client, ticketType, this.client.locales.getSubValue(\"other\", \"noReasonGiven\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (interaction.customId === \"removeUser\") {\n\t\t\t\tconst ticket = await this.client.prisma.tickets.findUnique({\n\t\t\t\t\tselect: {\n\t\t\t\t\t\tid: true,\n\t\t\t\t\t\tinvited: true,\n\t\t\t\t\t},\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tchannelid: interaction.message.channelId\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (const value of interaction.values) {\n\t\t\t\t\tawait (interaction.channel as GuildChannel | null)?.permissionOverwrites.delete(value).catch((e) => console.log(e));\n\t\t\t\t\tawait log(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLogType: \"userRemoved\",\n\t\t\t\t\t\t\tuser: interaction.user,\n\t\t\t\t\t\t\tticketId: ticket?.id.toString(),\n\t\t\t\t\t\t\tticketChannelId: interaction.channel?.id,\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tid: value,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.client\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Update the data in the database\n\t\t\t\tawait this.client.prisma.tickets.update({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tinvited: JSON.stringify((JSON.parse(ticket?.invited ?? \"[]\") as string[])\n\t\t\t\t\t\t\t.filter(userid=>interaction.values.find(rUID=>rUID===userid) === undefined))\n\t\t\t\t\t},\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tchannelid: interaction.channel?.id\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tawait interaction\n\t\t\t\t\t.update({\n\t\t\t\t\t\tcontent: `> Removed ${\n\t\t\t\t\t\t\tinteraction.values.length < 1 ? interaction.values : interaction.values.map((a) => `<@${a}>`).join(\", \")\n\t\t\t\t\t\t} from the ticket`,\n\t\t\t\t\t\tcomponents: [],\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (interaction.isModalSubmit()) {\n\t\t\tif (interaction.customId === \"askReason\") {\n\t\t\t\tconst type = interaction.fields.fields.first()?.customId.split(\"_\")[1];\n\t\t\t\tconst ticketType = this.client.config.ticketTypes.find((x) => x.codeName === type);\n\t\t\t\t// Using customId until the value can be figured out\n\t\t\t\tif (!ticketType) return console.error(`Ticket type ${interaction.customId} not found!`);\n\t\t\t\tcreateTicket(interaction, this.client, ticketType, interaction.fields.fields);\n\t\t\t}\n\n\t\t\tif (interaction.customId === \"askReasonClose\") {\n\t\t\t\tawait interaction.deferReply().catch((e) => console.log(e));\n\t\t\t\tclose(interaction, this.client, interaction.fields.fields.first()?.value);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n"]}