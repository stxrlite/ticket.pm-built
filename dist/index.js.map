{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n\nimport fs from \"fs-extra\";\nimport path from \"node:path\";\nimport { GatewayIntentBits } from \"discord.js\";\nimport { jsonc } from \"jsonc\";\nimport { config as envconf } from \"dotenv\";\nimport {ConfigType, ExtendedClient} from \"./structure\";\n\n// Initalize .env file as environment\ntry {envconf();}\ncatch(ex) {console.log(\".env failed to load\");}\n\n// Although invalid type, it should be good enough for now until more stuff needs to be handled here\nprocess.on(\"unhandledRejection\", (reason: string, promise: string, a: string) => {\n\tconsole.error(reason, promise, a);\n});\n\nprocess.on(\"uncaughtException\", (err: string) => {\n\tconsole.error(err);\n});\n\nprocess.stdout.write(`\n\\x1b[38;2;143;110;250m████████╗██╗ ██████╗██╗  ██╗███████╗████████╗    ██████╗  ██████╗ ████████╗\n\\x1b[38;2;157;101;254m╚══██╔══╝██║██╔════╝██║ ██╔╝██╔════╝╚══██╔══╝    ██╔══██╗██╔═══██╗╚══██╔══╝\n\\x1b[38;2;172;90;255m   ██║   ██║██║     █████╔╝ █████╗     ██║       ██████╔╝██║   ██║   ██║   \n\\x1b[38;2;188;76;255m   ██║   ██║██║     ██╔═██╗ ██╔══╝     ██║       ██╔══██╗██║   ██║   ██║   \n\\x1b[38;2;205;54;255m   ██║   ██║╚██████╗██║  ██╗███████╗   ██║       ██████╔╝╚██████╔╝   ██║   \n\\x1b[38;2;222;0;255m   ╚═╝   ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝   ╚═╝       ╚═════╝  ╚═════╝    ╚═╝\\x1b[0m\n                 https://github.com/Sayrix/ticket-bot\n\nConnecting to Discord...\n`);\n\n// Update Detector\nfetch(\"https://api.github.com/repos/Sayrix/Ticket-Bot/tags\").then((res) => {\n\tif (Math.floor(res.status / 100) !== 2) return console.warn(\"🔄  Failed to pull latest version from server\");\n\tres.json().then((json) => {\n\t\t// Assumign the format stays consistent (i.e. x.x.x)\n\t\tconst latest = json[0].name.split(\".\").map((k: string) => parseInt(k));\n\t\t// eslint-disable-next-line @typescript-eslint/no-var-requires\n\t\tconst current = require(\"../package.json\").version.split(\".\")\n\t\t\t.map((k: string) => parseInt(k));\n\t\tif (\n\t\t\tlatest[0] > current[0] ||\n\t\t\t(latest[0] === current[0] && latest[1] > current[1]) ||\n\t\t\t(latest[0] === current[0] && latest[1] === current[1] && latest[2] > current[2])\n\t\t)\n\t\t\tconsole.warn(`🔄  New version available: ${json[0].name}; Current Version: ${current.join(\".\")}`);\n\t\telse console.log(\"🔄  The ticket-bot is up to date\");\n\t});\n});\n\nconst config: ConfigType = jsonc.parse(fs.readFileSync(path.join(__dirname, \"/../config/config.jsonc\"), \"utf8\"));\n\nconst client = new ExtendedClient({\n\tintents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent, GatewayIntentBits.GuildMembers],\n\tpresence: {\n\t\tstatus: config.status?.status ?? \"online\"\n\t}\n}, config);\n\n// Login the bot\nconst token = process.env[\"TOKEN\"];\nif(!token || token.trim() === \"\")\n\tthrow new Error(\"TOKEN Environment Not Found\");\nclient.login(process.env[\"TOKEN\"]).then(null);\n\n/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n"]}