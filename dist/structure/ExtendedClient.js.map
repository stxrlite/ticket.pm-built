{"version":3,"file":"ExtendedClient.js","sourceRoot":"/","sources":["structure/ExtendedClient.ts"],"names":[],"mappings":"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","sourcesContent":["import {Client, ClientOptions, Collection, Routes} from \"discord.js\";\nimport {BaseCommand, ConfigType} from \"./\";\nimport {PrismaClient} from \"@prisma/client\";\nimport fs from \"fs-extra\";\nimport path from \"node:path\";\nimport {AddCommand, ClaimCommand, CloseCommand, RemoveCommand, RenameCommand} from \"../commands\";\nimport {InteractionCreateEvent, ReadyEvent} from \"../events\";\nimport {jsonc} from \"jsonc\";\nimport {REST} from \"@discordjs/rest\";\nimport {Translation} from \"../utils/translation\";\n\nexport default class ExtendedClient extends Client {\n\tpublic readonly config: ConfigType;\n\tpublic readonly prisma: PrismaClient;\n\tpublic locales: Translation;\n\tpublic commands: Collection<string, BaseCommand>;\n\tconstructor(options: ClientOptions, config: ConfigType) {\n\t\tsuper(options);\n\n\t\tthis.config = config;\n\t\tthis.prisma = new PrismaClient({\n\t\t\terrorFormat: \"minimal\"\n\t\t});\n\t\tthis.locales = new Translation(this.config.lang, path.join(__dirname, \"../../locales/\"));\n\t\tthis.commands = new Collection([\n\t\t\t[AddCommand.data.name, new AddCommand(this)],\n\t\t\t[ClaimCommand.data.name, new ClaimCommand(this)],\n\t\t\t[CloseCommand.data.name, new CloseCommand(this)],\n\t\t\t[RemoveCommand.data.name, new RemoveCommand(this)],\n\t\t\t[RenameCommand.data.name, new RenameCommand(this)],\n\t\t]);\n\t\tthis.loadEvents();\n\n\t}\n\n\tpublic msToHm (ms: number | Date) {\n\n\t\tif(ms instanceof Date) ms = ms.getTime();\n\n\t\tconst days = Math.floor(ms / (24 * 60 * 60 * 1000));\n\t\tconst daysms = ms % (24 * 60 * 60 * 1000);\n\t\tconst hours = Math.floor(daysms / (60 * 60 * 1000));\n\t\tconst hoursms = ms % (60 * 60 * 1000);\n\t\tconst minutes = Math.floor(hoursms / (60 * 1000));\n\t\tconst minutesms = ms % (60 * 1000);\n\t\tconst sec = Math.floor(minutesms / 1000);\n\n\t\tlet result = \"0s\";\n\n\t\tif (days > 0) result = `${days}d ${hours}h ${minutes}m ${sec}s`;\n\t\tif (hours > 0) result = `${hours}h ${minutes}m ${sec}s`;\n\t\tif (minutes > 0) result = `${minutes}m ${sec}s`;\n\t\tif (sec > 0) result = `${sec}s`;\n\t\treturn result;\n\n\t}\n\n\tprivate loadEvents () {\n\t\tthis.on(\"interactionCreate\", (interaction) => new InteractionCreateEvent(this).execute(interaction));\n\t\tthis.on(\"ready\", () => new ReadyEvent(this).execute());\n\t}\n\n\tpublic deployCommands() {\n\t\tconst commands = [\n\t\t\tAddCommand.data.toJSON(),\n\t\t\tClaimCommand.data.toJSON(),\n\t\t\tCloseCommand.data.toJSON(),\n\t\t\tRemoveCommand.data.toJSON(),\n\t\t\tRenameCommand.data.toJSON()\n\t\t];\n\n\t\tconst { guildId } = jsonc.parse(fs.readFileSync(path.join(__dirname, \"../../config/config.jsonc\"), \"utf8\"));\n\n\t\tif(!process.env[\"TOKEN\"]) throw Error(\"Discord Token Expected, deploy-command\");\n\t\tconst rest = new REST({ version: \"10\" }).setToken(process.env[\"TOKEN\"]);\n\n\t\trest\n\t\t\t.put(Routes.applicationGuildCommands(this.user?.id ?? \"\", guildId), { body: commands })\n\t\t\t.then(() => console.log(\"âœ…  Successfully registered application commands.\"))\n\t\t\t.catch(console.error);\n\t}\n}"]}