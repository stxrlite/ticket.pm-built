{"version":3,"file":"claim.js","sourceRoot":"/","sources":["utils/claim.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n\nimport { APIButtonComponent, ActionRowBuilder, ButtonBuilder, ButtonInteraction, ChannelType, CommandInteraction, EmbedBuilder, GuildMember, TextChannel } from \"discord.js\";\nimport { log } from \"./logs\";\nimport {ExtendedClient} from \"../structure\";\n\nexport const claim = async(interaction: ButtonInteraction | CommandInteraction, client: ExtendedClient) => {\n\tlet ticket = await client.prisma.tickets.findUnique({\n\t\twhere: {\n\t\t\tchannelid: interaction.channel?.id\n\t\t}\n\t});\n\tconst claimed = ticket?.claimedat && ticket.claimedby;\n\n\tif (!ticket)\n\t   return interaction.reply({\n\t\t   content: \"Ticket not found\",\n\t\t   ephemeral: true,\n\t   });\n\n\tconst canClaim = (interaction.member as GuildMember | null)?.roles.cache.some((r) => client.config.rolesWhoHaveAccessToTheTickets.includes(r.id));\n\n\tif (!canClaim)\n\t   return interaction\n\t\t   .reply({\n\t\t\t   content: client.locales.getValue(\"ticketOnlyClaimableByStaff\"),\n\t\t\t   ephemeral: true,\n\t\t   })\n\t\t   .catch((e) => console.log(e));\n\n\tif (claimed)\n\t   return interaction\n\t\t   .reply({\n\t\t\t   content: client.locales.getValue(\"ticketAlreadyClaimed\"),\n\t\t\t   ephemeral: true,\n\t\t   })\n\t\t   .catch((e) => console.log(e));\n\n\tlog(\n\t   {\n\t\t\tLogType: \"ticketClaim\",\n\t\t    user: interaction.user,\n\t\t    ticketId: ticket.id.toString(),\n\t\t    ticketChannelId: interaction.channel?.id,\n\t\t    ticketCreatedAt: ticket.createdat,\n\t   },\n\t   client\n\t);\n\n\tticket = await client.prisma.tickets.update({\n\t\tdata: {\n\t\t\tclaimedby: interaction.user.id,\n\t\t\tclaimedat: Date.now()\n\t\t},\n\t\twhere: {\n\t\t\tchannelid: interaction.channel?.id,\n\t\t}\n\t});\n\n\tconst msg = await interaction.channel?.messages.fetch(ticket.messageid);\n\tconst oldEmbed = msg?.embeds[0].data;\n\tconst newEmbed = new EmbedBuilder(oldEmbed)\n\t\t.setDescription(oldEmbed?.description + `\\n\\n ${client.locales.getSubValue(\"other\", \"claimedBy\").replace(\"USER\", `<@${interaction.user.id}>`)}`);\n\n\tconst row = new ActionRowBuilder<ButtonBuilder>();\n\tmsg?.components[0].components.map((x) => {\n\t\tconst btnBuilder = new ButtonBuilder(x.data as APIButtonComponent);\n\t   \tif (x.customId === \"claim\") btnBuilder.setDisabled(true);\n\t\trow.addComponents(btnBuilder);\n\t});\n\n   \tmsg?.edit({\n\t\t   content: msg.content,\n\t\t   embeds: [newEmbed],\n\t\t   components: [row],\n\t}).catch((e) => console.log(e));\n\n   \tinteraction\n\t   .reply({\n\t\t   content: client.locales.getValue(\"ticketClaimedMessage\").replace(\"USER\", `<@${interaction.user.id}>`),\n\t\t   ephemeral: false,\n\t   })\n\t   .catch((e) => console.log(e));\n\n\tconst defaultName = client.config.claimOption.nameWhenClaimed;\n   \tif (defaultName && defaultName.trim() !== \"\") {\n\t\tconst creatorUser = await client.users.fetch(ticket.creator);\n\t\tconst newName = defaultName\n\t\t\t.replaceAll(\"S_USERNAME\", interaction.user.username)\n\t\t\t.replaceAll(\"U_USERNAME\", creatorUser.username)\n\t\t\t.replaceAll(\"S_USERID\", interaction.user.id)\n\t\t\t.replaceAll(\"U_USERID\", creatorUser.id)\n\t\t\t.replaceAll(\"TICKETCOUNT\", ticket.id.toString());\n\t   await (interaction.channel as TextChannel | null)?.setName(newName).catch((e) => console.log(e));\n   \t}\n\n\tconst categoryID = client.config.claimOption.categoryWhenClaimed;\n\tif(categoryID && categoryID.trim() !== \"\") {\n\t\tconst category = await interaction.guild?.channels.fetch(categoryID);\n\t\tif(category?.type !== ChannelType.GuildCategory)\n\t\t\treturn console.error(\"claim.ts: USER ERROR - Invalid categoryWhenClaimed ID. Channel must be a category.\");\n\t\tawait (interaction.channel as TextChannel | null)?.setParent(category);\n\t}\n};\n/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n"]}